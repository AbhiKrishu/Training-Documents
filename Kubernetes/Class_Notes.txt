
#########################
Day - 16 - 14th Nov. 2023
#########################								
			
		Container Orchestration ::::
		
			-> Used to ensure that the applications that are running using the containers are available.
			
			-> High-Availability of containers.
					
			-> Auto-Scaling 
			
			-> Load-Balancing
			
			
		www.amazon.com ==> 
		
		
			mywebapp.war ==> mywebapp_c1 ==> prod.
			
			Replicas of containers will be deployed in target environment. 3 
						
						
		Docker ::
		
			Docker Compose	: Is used to run multiple containers as single service. 
				c1,2,3 ==> payment_service
				Manifest file ==> *.yaml 
			Docker Swarm 
				==> Container Orchestration Tools ::: => High-Availability of containers.
				==> It is meant only for Docker Containers.
				
			Kubernetes 
				==> Is a Open-Source Container Orchestration Tool.
			
					-> High-Availability of containers.
							
					-> Auto-Scaling 
					
					-> Load-Balancing	

			Managed Service ::
			
				AWS ==> EKS 
						
			
			1. Kubernetes Architecture & its components
					Master/Nodes 
						Kubernetes_Master(VM) 		==> Validate the deployment requests & Schedule the deployment to healthy nodes.
							Kubernetes_Node1(VM)
							Kubernetes_Node2(VM)
							Kubernetes_Node3(VM)

			2. Kubernetes Terminologies
					Image 
					Containers 
					Pods ==> smallest unit of task/schedule in kubernetes - A Pod can have single or more than one container.
					Container Registry 
					Container Runtime Interface - ContainerD
					Cluster ==> Collection of WorkerNodes
				
			3. Kubernetes Objects 
			
					Pod 
					Pod Networking
					Replicaset
					Deployment 
					Daemonset 
					Services 
					Volumes 
					
			4. Installation & Configuration of Kubernetes Master & Workernodes.
			
				Steps ::
				
					1. Create VMs (1 + 2) 
					2. Enable the inbound rules to allow all traffic (for Demo)
					3. In all Master and WorkNodes :
						- Setup the Node Name.
						- Install Docker 
						- Install and Configure CRI - ContainerD
						- Install Kubernetes - Kubeadm, kubectl, kubelet
						- Ensure that Kubelet & ContainerD are up and running 
					4. Only in Master :
						- Kubeadm init ==> initialize Kubernetes_Master Node
					5. Only in WorkeNodes :
						- kubeadm join	==> Used to attach the WorkerNodes to Kubernetes_Master.
						
						
						Kubernetes_Master(VM) 	
                        	Kubernetes_Node1(VM)
                        	Kubernetes_Node2(VM)
                        	Kubernetes_Node3(VM)
						
						Kubernetes_Master						
							Kubernetes_Master1(VM) 	
								Cluster1 :
									Kubernetes_Node1(VM)
									Kubernetes_Node2(VM)
									Kubernetes_Node3(VM)
								Cluster2 :
									Kubernetes_Node1(VM)
									Kubernetes_Node2(VM)
									Kubernetes_Node3(VM)
							Kubernetes_Master2(VM) 	
								Cluster1 :
									Kubernetes_Node1(VM)
									Kubernetes_Node2(VM)
									Kubernetes_Node3(VM)
								Cluster2 :
									Kubernetes_Node1(VM)
									Kubernetes_Node2(VM)
									Kubernetes_Node3(VM)

#########################
Day - 17 - 15th Nov. 2023
#########################	

				Kubernetes Objects 
					Pod 
					Pod Networking
					Replicaset
					Deployment 
					Daemonset 
					Services 
					Volumes 
					
				Kubectl ==> Command Line Utility --> 
				
				Pods 
				Pods Networking 
				
				
				Create Pod :::
				
				Manifest file :::
				
				
				Kubernetes Services :::
				
					ClusterIP
					NodePort 
					Load Balancer
					
				Kubernetes Controller Objects :::
					Replication Controller 
					Replicaset
					Deployment 
					Daemonset
					
				Replicaset ::: Is used to deploy a specific number of pods 
				replicas : 5 
				
				Application Deployment in Kubernetes 
				
					Deployment controller Object :
					
						- Used to deploy the pods 
						- Create replicaset
						- Perform Scale-up 
						- Scale-Down 
						- Upgrade 
						- RollBack
						
				Developer ==> 	mywebapp.war ==> mywebapp:v1.0 ==>
								mywebapp.war ==> mywebapp:v1.1 ==>
								mywebapp.war ==> mywebapp:v1.2 ==>
								mywebapp.war ==> mywebapp:v2.0 ==>
								
								
					Deployment Strategy ::
						StrategyType:           RollingUpdate
						
						
					pod1 ==> mywebapp:v1.0 
					
					Deployment Controller :
					
						pod1	==> mywebapp:v1.0 
						pod2	==> mywebapp:v1.0 
						pod3	==> mywebapp:v1.0 


							Upgrade to mywebapp:v1.1 ??
							
						pod1 	==> mywebapp:v1.1
						pod2	==> mywebapp:v1.1
						
				Replicaset 	::: Is used to deploy a specific number of pods 
				Daemonset 	::: Is used to run a copy of pod in all the available nodes or some group of nodes.
								Run - Monitoring/Logging tools 
								
						Kubernetes_Master(VM) 	
                        	Kubernetes_Node1(VM)
                        	Kubernetes_Node2(VM)
                        	Kubernetes_Node3(VM)

				Namespace :: Logical partitioning of Cluster.
								To run/deploy the pods in an isolated environment within the cluster.
								
								WN1,2,3,4,5,6,7,8,9
								
				Environments: 
				
					DEV 
					QA 
					UAT 

#########################
Day - 18 - 16th Nov. 2023
#########################


		Kubernetes Controller Objects :::
			Replication Controller 		==> uses equality based operator - environment = QA
			Replicaset					==> set based operator 			 - environment = {Dev,QA}
			Deployment 
			Daemonset
			Namespace
		
			Kubernetes Services ::
			
				Nodeport 			==> Used to expose the pods to internet 
				
				ClusterIP			==> Used to access the pods within the cluster 
				
				Load Balancer 
				
				Labels and Selector are used to map the Pods with Service.
			
			Volumes ::
				
				emptyDir
				
				Persistant Volume 
				Persistant Volume Claim 
				
				ConfigMap 
				Secrets 
				
				Hostpath 
				
			
				1 TB of Volume ??
				Such huge volumes are procured formed external storage servers(AWS EBS/AZ/GPV/Onprem-storage servers)
			
			
				Node Selector :::
			
				Package Manager for Kubernetes :::
					
					HELM Package Manager - Used to install the packages for Kubernetes. 
					
	End - to - end CICD Pipeline Demo :::
	
	Continuous Monitoring ::: 
	
			Infra-Structure Monitoring  ==> Promethus/Grafana/Nagios/Dynatrace
				
					CPU/Memory/Traffic 
					
					Prometheus  => It is a monitoring & Alerting Tool 
					Grafana		=> It is a Visualization Tool 
			
			Application Monitoring
			
			
			Production/Support Monitoring Team
			
Next :::			
				-> Install and Configure Prometheus/Grafana.
				-> Prometheus Agent - Node Exporter 
				-> Prometheus Database - Time Series Database 
				-> PromQL
				-> Integration of Prometheus with Grafana 
				-> Create Dashboards
				
				
				CICD Demo. 
